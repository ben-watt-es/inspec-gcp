# frozen_string_literal: false

# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in README.md and
#     CONTRIBUTING.md located at the root of this package.
#
# ----------------------------------------------------------------------------
module GoogleInSpec
  module Dataproc
    module Property
      class ClusterConfigSecurityConfigKerberosConfig
        attr_reader :enable_kerberos, :rootprincipal_password_uri, :kms_key_uri, :keystore_uri, :truststore_uri, :key_password_uri, :truststore_password_uri, :cross_realm_trust_realm, :cross_realm_trust_admin_server, :cross_realm_trust_shared_password_uri, :kdc_db_key_uri, :tgt_lifetime_hours, :realm

        def initialize(args = nil, parent_identifier = nil)
          return if args.nil?
          @parent_identifier = parent_identifier
          @enable_kerberos = args['enableKerberos']
          @rootprincipal_password_uri = args['rootprincipalPasswordUri']
          @kms_key_uri = args['kmsKeyUri']
          @keystore_uri = args['keystoreUri']
          @truststore_uri = args['truststoreUri']
          @key_password_uri = args['keyPasswordUri']
          @truststore_password_uri = args['truststorePasswordUri']
          @cross_realm_trust_realm = args['crossRealmTrustRealm']
          @cross_realm_trust_admin_server = args['crossRealmTrustAdminServer']
          @cross_realm_trust_shared_password_uri = args['crossRealmTrustSharedPasswordUri']
          @kdc_db_key_uri = args['kdcDbKeyUri']
          @tgt_lifetime_hours = args['tgtLifetimeHours']
          @realm = args['realm']
        end

        def to_s
          "#{@parent_identifier} ClusterConfigSecurityConfigKerberosConfig"
        end
      end
    end
  end
end
